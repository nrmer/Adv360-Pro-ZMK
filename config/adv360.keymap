#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/stp.h>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    behaviors {
        #include "macros.dtsi"
        #include "version.dtsi"

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&none      &none             &kp AMPS   &kp EXCL  &kp HASH   &kp EQUAL  &mo 5                                                                   &mo 3      &kp ASTRK  &kp PLUS        &kp EQUAL     &kp END     &none        &none
&kp TAB    &kp SEMI          &kp COMMA  &kp DOT   &kp P      &kp Y      &none                                                                   &none      &kp F      &kp G           &kp C         &kp R       &kp L        &kp SLASH
&kp GRAVE  &kp A             &kp O      &kp E     &kp U      &kp I      &mo 2          &kp LEFT_CONTROL  &kp LEFT_ALT      &kp LGUI  &kp GLOBE  &mo 2      &kp D      &kp H           &kp T         &kp N       &kp S        &kp MINUS
&kp LSHFT  &kp SINGLE_QUOTE  &kp Q      &kp J     &kp K      &kp X                                       &kp CAPS          &kp END                         &kp B      &kp M           &kp W         &kp V       &kp Z        &kp RSHFT
&mo 1      &kp CARET         &kp AT     &kp LEFT  &kp RIGHT             &kp BACKSPACE  &kp DELETE        &kp ESCAPE        &kp TAB   &kp ENTER  &kp SPACE             &kp DOWN_ARROW  &kp UP_ARROW  &kp DOLLAR  &kp PERCENT  &mo 4
            >;
        };

        layer_keypad {
            bindings = <
&none  &none  &none  &none  &none  &none  &trans                                      &none   &none  &kp KP_NUM  &kp KP_EQUAL     &kp KP_DIVIDE  &kp KP_MULTIPLY  &none
&none  &none  &none  &none  &none  &none  &none                                       &none   &none  &kp KP_N7   &kp KP_N8        &kp KP_N9      &kp KP_MINUS     &none
&none  &none  &none  &none  &none  &none  &none   &trans  &trans      &trans  &trans  &none   &none  &kp KP_N4   &kp KP_N5        &kp KP_N6      &kp KP_PLUS      &none
&none  &none  &none  &none  &none  &none                  &trans      &trans                  &none  &kp KP_N1   &kp KP_N2        &kp KP_N3      &kp KP_ENTER     &none
&none  &none  &none  &none  &none         &trans  &trans  &trans      &trans  &trans  &trans         &none       &kp KP_NUMBER_0  &kp KP_DOT     &none            &none
            >;
        };

        layer_fn {
            bindings = <
&kp F1   &kp F2   &kp F3   &kp F4   &kp F5   &kp F6   &none                                                    &none       &kp F7   &kp F8   &kp F9   &kp F10  &kp F11  &kp F12
&kp F13  &kp F14  &kp F15  &kp F16  &kp F17  &kp F18  &none                                                    &none       &kp F19  &kp F20  &kp F21  &kp F22  &kp F23  &kp F24
&trans   &trans   &trans   &trans   &trans   &trans   &none   &trans  &bootloader      &bt BT_CLR  &trans      &none       &trans   &trans   &trans   &trans   &trans   &trans
&trans   &trans   &trans   &trans   &trans   &trans                   &trans           &trans                              &trans   &trans   &trans   &trans   &trans   &trans
&trans   &trans   &trans   &trans   &trans            &trans  &trans  &trans           &trans      &bt BT_PRV  &bt BT_NXT           &trans   &trans   &trans   &trans   &trans
            >;
        };

        layer_brackets {
            bindings = <
&none  &none  &none          &none      &none                 &none                  &none                                    &trans  &none  &none  &none  &none  &none  &none
&none  &none  &none          &none      &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &none                                    &none   &none  &none  &none  &none  &none  &none
&none  &none  &kp BACKSLASH  &kp SLASH  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &none  &none  &none      &trans  &trans  &none   &none  &none  &none  &none  &none  &none
&none  &none  &none          &none      &kp LEFT_BRACE        &kp RIGHT_BRACE                      &none      &none                   &none  &none  &none  &none  &none  &none
&none  &none  &none          &none      &none                                        &none  &none  &none      &none   &trans  &trans         &none  &none  &none  &none  &none
            >;
        };

        layer_4 {
            bindings = <
&none   &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans      &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;
        };

        layer_5 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans      &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;
        };
        extra1 { 
          display-name = "Red";    
          status = "reserved";
        };
    
        extra2 { 
          display-name = "Purple";    
          status = "reserved";
        };
    
        extra3 { 
          display-name = "Cyan";    
          status = "reserved";
        };
    
        extra4 { 
          display-name = "Yellow";    
          status = "reserved";
        };
    };
};
